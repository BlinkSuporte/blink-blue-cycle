{"ast":null,"code":"import{http,isExpired,HTTP_TOKEN,REJECT_MSG}from'./http';//\nexport var fetchCart=function fetchCart(ukPedido){var options={\"Token\":HTTP_TOKEN,\"Esquema\":\"web\",\"Tabela\":\"Pedido\",\"Parametros\":[// {\n//     \"Nome\": \"ukPedido\",\n//     \"Valor\": ukPedido\n// }\n{\"Nome\":\"ApenasRegistrosPedido\",\"Valor\":true}]};return new Promise(function(resolve,reject){var ret=http.post(\"Dados/ObterDados\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var fetchCartItems=function fetchCartItems(tokenLogin){var options={\"Token\":tokenLogin!==null&&tokenLogin!==void 0?tokenLogin:HTTP_TOKEN,\"Esquema\":\"web\",\"Tabela\":\"PedidoItem\",\"Parametros\":[{\"Nome\":\"ApenasRegistrosPedido\",\"Valor\":true}]};return new Promise(function(resolve,reject){var ret=http.post(\"Dados/ObterDados\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var addToCart=function addToCart(idProduto,quantity,origin){var options={\"Token\":HTTP_TOKEN,\"idProduto\":parseInt(idProduto),\"Quantidade\":parseInt(quantity),\"QuantidadeBonificada\":0,\"Origem\":origin};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/AdicionarItem\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var updateCart=function updateCart(idProduto,item,quantity){var options={\"Token\":HTTP_TOKEN,\"idProduto\":parseInt(idProduto),\"Item\":parseInt(item),\"Quantidade\":parseInt(quantity),\"QuantidadeBonificada\":0};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/AtualizarItem\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var removeFromCart=function removeFromCart(idProduto,item){var options={\"Token\":HTTP_TOKEN,\"idProduto\":parseInt(idProduto),\"Item\":parseInt(item)};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/RemoverItem\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var fetchPaymentTerms=function fetchPaymentTerms(){var options={\"Token\":HTTP_TOKEN,\"Esquema\":\"web\",\"Tabela\":\"CondicaoPagamento\"};return new Promise(function(resolve,reject){var ret=http.post(\"Dados/ObterDados\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var postSelectedPaymentTerm=function postSelectedPaymentTerm(idCondicaoPagamento){var options={\"Token\":HTTP_TOKEN,\"idCondicaoPagamento\":parseInt(idCondicaoPagamento)};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/AtualizarCondicaoPagamento\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var postEndCart=function postEndCart(){var options={\"Token\":HTTP_TOKEN};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/FinalizarCarrinho\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var postDuplicateCart=function postDuplicateCart(idPedido){var options={\"Token\":HTTP_TOKEN,\"Parametros\":[{\"Nome\":\"idPedido\",\"Valor\":parseInt(idPedido)}]};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/CopiarPedido\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var resetCart=function resetCart(){var options={\"Token\":HTTP_TOKEN};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/AbandonarCarrinho\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};//\nexport var postSurveyRate=function postSurveyRate(pedido,rating,obs){var options={\"Token\":HTTP_TOKEN,\"Parametros\":[{\"Nome\":\"Nota\",\"Valor\":parseInt(rating)},{\"Nome\":\"Observacoes\",\"Valor\":obs},{\"Nome\":\"ukPedido\",\"Valor\":pedido}]};return new Promise(function(resolve,reject){var ret=http.post(\"Venda/RegistrarPesquisaSatisfacao\",options);if(isExpired(ret)){reject(REJECT_MSG);}resolve(ret);});};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/services/cart-api.js"],"names":["http","isExpired","HTTP_TOKEN","REJECT_MSG","fetchCart","ukPedido","options","Promise","resolve","reject","ret","post","fetchCartItems","tokenLogin","addToCart","idProduto","quantity","origin","parseInt","updateCart","item","removeFromCart","fetchPaymentTerms","postSelectedPaymentTerm","idCondicaoPagamento","postEndCart","postDuplicateCart","idPedido","resetCart","postSurveyRate","pedido","rating","obs"],"mappings":"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","sourcesContent":["import { http, isExpired, HTTP_TOKEN, REJECT_MSG } from './http';\r\n\r\n//\r\nexport const fetchCart = (ukPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"Pedido\",\r\n        \"Parametros\": [\r\n            // {\r\n            //     \"Nome\": \"ukPedido\",\r\n            //     \"Valor\": ukPedido\r\n            // }\r\n            {\r\n                \"Nome\": \"ApenasRegistrosPedido\",\r\n                \"Valor\": true\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const fetchCartItems = (tokenLogin) => {\r\n    const options = {\r\n        \"Token\": tokenLogin ?? HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"PedidoItem\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"ApenasRegistrosPedido\",\r\n                \"Valor\": true\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const addToCart = (idProduto, quantity, origin) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Quantidade\": parseInt(quantity),\r\n        \"QuantidadeBonificada\": 0,\r\n        \"Origem\": origin\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AdicionarItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const updateCart = (idProduto, item, quantity) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Item\": parseInt(item),\r\n        \"Quantidade\": parseInt(quantity),\r\n        \"QuantidadeBonificada\": 0\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AtualizarItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const removeFromCart = (idProduto, item) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Item\": parseInt(item)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/RemoverItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const fetchPaymentTerms = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"CondicaoPagamento\"\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postSelectedPaymentTerm = (idCondicaoPagamento) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idCondicaoPagamento\": parseInt(idCondicaoPagamento)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AtualizarCondicaoPagamento`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postEndCart = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/FinalizarCarrinho`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postDuplicateCart = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/CopiarPedido`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const resetCart = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AbandonarCarrinho`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postSurveyRate = (pedido, rating, obs) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"Nota\",\r\n                \"Valor\": parseInt(rating)\r\n            },\r\n            {\r\n                \"Nome\": \"Observacoes\",\r\n                \"Valor\": obs\r\n            },\r\n            {\r\n                \"Nome\": \"ukPedido\",\r\n                \"Valor\": pedido\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/RegistrarPesquisaSatisfacao`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}