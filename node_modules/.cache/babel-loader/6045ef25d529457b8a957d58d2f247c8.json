{"ast":null,"code":"// import React from 'react';\n// import { fetchCategories } from '../services/categories-api';\n// import { dynamicSort } from '../utils';\nimport{getItemSession}from'../utils';export var getAllCategories=function getAllCategories(filtro){var categories=getItemSession('_categorias');// if ( ! categories) {\n//     fetchCategories()\n//         .then(res => {\n//             categories = res.data.Data.Dados;\n//             categories = filtrar(categories.Data.Dados, 0);\n//             categories.sort(dynamicSort(\"Descricao\"));\n//             localStorage.setItem('_categorias', JSON.stringify(categories))\n//         })\n//         .catch(error => {\n//             console.log('Erro ao carregar Categorias', error)\n//         })\n// }\nreturn JSON.parse(categories);};// const filtrar = (array, value) => {\n//     return array.filter(function (newarr) {\n//         return newarr.idClassificacaoNivelAnterior === value;\n//     });\n// }\nexport var getCategoryById=function getCategoryById(id){var selected=getAllCategories().filter(function(category){return parseInt(category.idClassificacaoNivel)===parseInt(id);});return JSON.parse(JSON.stringify(selected[0]));};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/containers/CategoriesContainer.js"],"names":["getItemSession","getAllCategories","filtro","categories","JSON","parse","getCategoryById","id","selected","filter","category","parseInt","idClassificacaoNivel","stringify"],"mappings":"AAAA;AACA;AACA;AACA,OAASA,cAAT,KAA+B,UAA/B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAAY,CACxC,GAAIC,CAAAA,UAAU,CAAGH,cAAc,CAAC,iBAAD,CAA/B,CAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAOI,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP,CACH,CApBM,CAsBP;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,EAAD,CAAQ,CACnC,GAAIC,CAAAA,QAAQ,CAAGP,gBAAgB,GAAGQ,MAAnB,CAA0B,SAAAC,QAAQ,QAAIC,CAAAA,QAAQ,CAACD,QAAQ,CAACE,oBAAV,CAAR,GAA4CD,QAAQ,CAACJ,EAAD,CAAxD,EAAlC,CAAf,CACA,MAAOH,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACS,SAAL,CAAeL,QAAQ,CAAC,CAAD,CAAvB,CAAX,CAAP,CACH,CAHM","sourcesContent":["// import React from 'react';\r\n// import { fetchCategories } from '../services/categories-api';\r\n// import { dynamicSort } from '../utils';\r\nimport { getItemSession } from '../utils';\r\n\r\nexport const getAllCategories = (filtro) => {\r\n    let categories = getItemSession('_categorias');\r\n\r\n    // if ( ! categories) {\r\n    //     fetchCategories()\r\n    //         .then(res => {\r\n    //             categories = res.data.Data.Dados;\r\n\r\n    //             categories = filtrar(categories.Data.Dados, 0);\r\n\r\n    //             categories.sort(dynamicSort(\"Descricao\"));\r\n\r\n    //             localStorage.setItem('_categorias', JSON.stringify(categories))\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log('Erro ao carregar Categorias', error)\r\n    //         })\r\n    // }\r\n\r\n    return JSON.parse(categories);\r\n}\r\n\r\n// const filtrar = (array, value) => {\r\n//     return array.filter(function (newarr) {\r\n//         return newarr.idClassificacaoNivelAnterior === value;\r\n//     });\r\n// }\r\n\r\nexport const getCategoryById = (id) => {\r\n    let selected = getAllCategories().filter(category => parseInt(category.idClassificacaoNivel) === parseInt(id));\r\n    return JSON.parse(JSON.stringify(selected[0]));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}