{"ast":null,"code":"import { http, isExpired, HTTP_TOKEN, REJECT_MSG } from './http'; //\n\nexport const fetchCart = ukPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"Pedido\",\n    \"Parametros\": [// {\n    //     \"Nome\": \"ukPedido\",\n    //     \"Valor\": ukPedido\n    // }\n    {\n      \"Nome\": \"ApenasRegistrosPedido\",\n      \"Valor\": true\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const fetchCartItems = tokenLogin => {\n  const options = {\n    \"Token\": tokenLogin !== null && tokenLogin !== void 0 ? tokenLogin : HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"PedidoItem\",\n    \"Parametros\": [{\n      \"Nome\": \"ApenasRegistrosPedido\",\n      \"Valor\": true\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const addToCart = (idProduto, quantity, origin) => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"idProduto\": parseInt(idProduto),\n    \"Quantidade\": parseInt(quantity),\n    \"QuantidadeBonificada\": 0,\n    \"Origem\": origin\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/AdicionarItem`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const updateCart = (idProduto, item, quantity) => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"idProduto\": parseInt(idProduto),\n    \"Item\": parseInt(item),\n    \"Quantidade\": parseInt(quantity),\n    \"QuantidadeBonificada\": 0\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/AtualizarItem`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const removeFromCart = (idProduto, item) => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"idProduto\": parseInt(idProduto),\n    \"Item\": parseInt(item)\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/RemoverItem`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const fetchPaymentTerms = () => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"CondicaoPagamento\"\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const postSelectedPaymentTerm = idCondicaoPagamento => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"idCondicaoPagamento\": parseInt(idCondicaoPagamento)\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/AtualizarCondicaoPagamento`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const postEndCart = () => {\n  const options = {\n    \"Token\": HTTP_TOKEN\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/FinalizarCarrinho`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const postDuplicateCart = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/CopiarPedido`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const resetCart = () => {\n  const options = {\n    \"Token\": HTTP_TOKEN\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/AbandonarCarrinho`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n}; //\n\nexport const postSurveyRate = (pedido, rating, obs) => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Parametros\": [{\n      \"Nome\": \"Nota\",\n      \"Valor\": parseInt(rating)\n    }, {\n      \"Nome\": \"Observacoes\",\n      \"Valor\": obs\n    }, {\n      \"Nome\": \"ukPedido\",\n      \"Valor\": pedido\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Venda/RegistrarPesquisaSatisfacao`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/services/cart-api.js"],"names":["http","isExpired","HTTP_TOKEN","REJECT_MSG","fetchCart","ukPedido","options","Promise","resolve","reject","ret","post","fetchCartItems","tokenLogin","addToCart","idProduto","quantity","origin","parseInt","updateCart","item","removeFromCart","fetchPaymentTerms","postSelectedPaymentTerm","idCondicaoPagamento","postEndCart","postDuplicateCart","idPedido","resetCart","postSurveyRate","pedido","rating","obs"],"mappings":"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","sourcesContent":["import { http, isExpired, HTTP_TOKEN, REJECT_MSG } from './http';\r\n\r\n//\r\nexport const fetchCart = (ukPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"Pedido\",\r\n        \"Parametros\": [\r\n            // {\r\n            //     \"Nome\": \"ukPedido\",\r\n            //     \"Valor\": ukPedido\r\n            // }\r\n            {\r\n                \"Nome\": \"ApenasRegistrosPedido\",\r\n                \"Valor\": true\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const fetchCartItems = (tokenLogin) => {\r\n    const options = {\r\n        \"Token\": tokenLogin ?? HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"PedidoItem\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"ApenasRegistrosPedido\",\r\n                \"Valor\": true\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const addToCart = (idProduto, quantity, origin) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Quantidade\": parseInt(quantity),\r\n        \"QuantidadeBonificada\": 0,\r\n        \"Origem\": origin\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AdicionarItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const updateCart = (idProduto, item, quantity) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Item\": parseInt(item),\r\n        \"Quantidade\": parseInt(quantity),\r\n        \"QuantidadeBonificada\": 0\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AtualizarItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const removeFromCart = (idProduto, item) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idProduto\": parseInt(idProduto),\r\n        \"Item\": parseInt(item)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/RemoverItem`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const fetchPaymentTerms = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"CondicaoPagamento\"\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postSelectedPaymentTerm = (idCondicaoPagamento) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"idCondicaoPagamento\": parseInt(idCondicaoPagamento)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AtualizarCondicaoPagamento`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postEndCart = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/FinalizarCarrinho`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postDuplicateCart = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/CopiarPedido`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const resetCart = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/AbandonarCarrinho`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n//\r\nexport const postSurveyRate = (pedido, rating, obs) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"Nota\",\r\n                \"Valor\": parseInt(rating)\r\n            },\r\n            {\r\n                \"Nome\": \"Observacoes\",\r\n                \"Valor\": obs\r\n            },\r\n            {\r\n                \"Nome\": \"ukPedido\",\r\n                \"Valor\": pedido\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Venda/RegistrarPesquisaSatisfacao`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}