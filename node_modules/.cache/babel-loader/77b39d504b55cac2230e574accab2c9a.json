{"ast":null,"code":"// import React from 'react';\n// import { fetchManufacturers } from '../services/manufacturers-api';\nimport{getItemSession}from'../utils';export var getAllManufacturers=function getAllManufacturers(){var manufacturers=getItemSession('_fornecedores');// if (!manufacturers) {\n//     console.debug('Nova busca de Fornecedores')\n//     fetchManufacturers()\n//         .then(res => {\n//             manufacturers = res.data.Data.Dados;\n//             localStorage.setItem('_fornecedores', JSON.stringify(manufacturers))\n//         })\n//         .catch(error => {\n//             console.log('Erro ao carregar Fornecedores', error)\n//         })\n// }\nreturn JSON.parse(manufacturers);};export var getManufacturerById=function getManufacturerById(id){var selected=getAllManufacturers().filter(function(manufacturer){return parseInt(manufacturer.idFornecedor)===parseInt(id);});return JSON.parse(JSON.stringify(selected[0]));};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/containers/ManufacturersContainer.js"],"names":["getItemSession","getAllManufacturers","manufacturers","JSON","parse","getManufacturerById","id","selected","filter","manufacturer","parseInt","idFornecedor","stringify"],"mappings":"AAAA;AACA;AACA,OAASA,cAAT,KAA+B,UAA/B,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACrC,GAAIC,CAAAA,aAAa,CAAGF,cAAc,CAAC,eAAD,CAAlC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAP,CACH,CAhBM,CAkBP,MAAO,IAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,EAAD,CAAQ,CACvC,GAAIC,CAAAA,QAAQ,CAAGN,mBAAmB,GAAGO,MAAtB,CAA6B,SAAAC,YAAY,QAAIC,CAAAA,QAAQ,CAACD,YAAY,CAACE,YAAd,CAAR,GAAwCD,QAAQ,CAACJ,EAAD,CAApD,EAAzC,CAAf,CAEA,MAAOH,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACS,SAAL,CAAeL,QAAQ,CAAC,CAAD,CAAvB,CAAX,CAAP,CACH,CAJM","sourcesContent":["// import React from 'react';\r\n// import { fetchManufacturers } from '../services/manufacturers-api';\r\nimport { getItemSession } from '../utils';\r\n\r\nexport const getAllManufacturers = () => {\r\n    let manufacturers = getItemSession('_fornecedores');\r\n\r\n    // if (!manufacturers) {\r\n    //     console.debug('Nova busca de Fornecedores')\r\n    //     fetchManufacturers()\r\n    //         .then(res => {\r\n    //             manufacturers = res.data.Data.Dados;\r\n    //             localStorage.setItem('_fornecedores', JSON.stringify(manufacturers))\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log('Erro ao carregar Fornecedores', error)\r\n    //         })\r\n    // }\r\n\r\n    return JSON.parse(manufacturers);\r\n}\r\n\r\nexport const getManufacturerById = (id) => {\r\n    let selected = getAllManufacturers().filter(manufacturer => parseInt(manufacturer.idFornecedor) === parseInt(id));\r\n   \r\n    return JSON.parse(JSON.stringify(selected[0]));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}