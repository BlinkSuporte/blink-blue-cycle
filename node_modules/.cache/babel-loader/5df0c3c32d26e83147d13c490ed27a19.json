{"ast":null,"code":"import { http, isExpired, HTTP_TOKEN, REJECT_MSG } from './http';\nexport const fetchAllInvoices = (numeroPedido = null, dataInicial = null, dataFinal = null) => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"Historico\",\n    \"Parametros\": []\n  };\n\n  if (numeroPedido) {\n    options.Parametros.push({\n      \"Nome\": \"NumeroPedido\",\n      \"Valor\": numeroPedido\n    });\n  }\n\n  if (dataInicial && dataFinal) {\n    options.Parametros.push({\n      \"Nome\": \"DataInicial\",\n      \"Valor\": dataInicial\n    }, {\n      \"Nome\": \"DataFinal\",\n      \"Valor\": dataFinal\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchInvoice = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"Historico\",\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchInvoiceItems = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"HistoricoItem\",\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchTracking = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"TrackingHistorico\",\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchNF = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"NotasPedido\",\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchExcel = idPedido => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"HistoricoItem\",\n    \"Parametros\": [{\n      \"Nome\": \"idPedido\",\n      \"Valor\": parseInt(idPedido)\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDadosExcel`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};\nexport const fetchDeliveryDate = () => {\n  const options = {\n    \"Token\": HTTP_TOKEN,\n    \"Esquema\": \"web\",\n    \"Tabela\": \"DatasPedido\"\n  };\n  return new Promise((resolve, reject) => {\n    const ret = http.post(`Dados/ObterDados`, options);\n\n    if (isExpired(ret)) {\n      reject(REJECT_MSG);\n    }\n\n    resolve(ret);\n  });\n};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/services/invoices-api.js"],"names":["http","isExpired","HTTP_TOKEN","REJECT_MSG","fetchAllInvoices","numeroPedido","dataInicial","dataFinal","options","Parametros","push","Promise","resolve","reject","ret","post","fetchInvoice","idPedido","parseInt","fetchInvoiceItems","fetchTracking","fetchNF","fetchExcel","fetchDeliveryDate"],"mappings":"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","sourcesContent":["import { http, isExpired, HTTP_TOKEN, REJECT_MSG } from './http';\r\n\r\nexport const fetchAllInvoices = (numeroPedido = null, dataInicial = null, dataFinal = null) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"Historico\",\r\n        \"Parametros\": [\r\n        ]\r\n    }\r\n\r\n    if (numeroPedido) {\r\n        options.Parametros.push({ \"Nome\": \"NumeroPedido\", \"Valor\": numeroPedido })\r\n    }\r\n\r\n    if (dataInicial && dataFinal) {\r\n        options.Parametros.push(\r\n            {\r\n                \"Nome\": \"DataInicial\",\r\n                \"Valor\": dataInicial\r\n            },\r\n            {\r\n                \"Nome\": \"DataFinal\",\r\n                \"Valor\": dataFinal\r\n            }\r\n        )\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\nexport const fetchInvoice = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"Historico\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\nexport const fetchInvoiceItems = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"HistoricoItem\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\nexport const fetchTracking = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"TrackingHistorico\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n\r\nexport const fetchNF = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"NotasPedido\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\nexport const fetchExcel = (idPedido) => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"HistoricoItem\",\r\n        \"Parametros\": [\r\n            {\r\n                \"Nome\": \"idPedido\",\r\n                \"Valor\": parseInt(idPedido)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDadosExcel`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}\r\n\r\n\r\nexport const fetchDeliveryDate = () => {\r\n    const options = {\r\n        \"Token\": HTTP_TOKEN,\r\n        \"Esquema\": \"web\",\r\n        \"Tabela\": \"DatasPedido\"\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const ret = http.post(`Dados/ObterDados`, options)\r\n\r\n        if (isExpired(ret)) {\r\n            reject(REJECT_MSG);\r\n        }\r\n\r\n        resolve(ret);\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}