{"ast":null,"code":"// import React from 'react';\n// import { fetchManufacturers } from '../services/manufacturers-api';\nimport { getItemSession } from '../utils';\nexport const getAllManufacturers = () => {\n  let manufacturers = getItemSession('_fornecedores'); // if (!manufacturers) {\n  //     console.debug('Nova busca de Fornecedores')\n  //     fetchManufacturers()\n  //         .then(res => {\n  //             manufacturers = res.data.Data.Dados;\n  //             localStorage.setItem('_fornecedores', JSON.stringify(manufacturers))\n  //         })\n  //         .catch(error => {\n  //             console.log('Erro ao carregar Fornecedores', error)\n  //         })\n  // }\n\n  return JSON.parse(manufacturers);\n};\nexport const getManufacturerById = id => {\n  let selected = getAllManufacturers().filter(manufacturer => parseInt(manufacturer.idFornecedor) === parseInt(id));\n  return JSON.parse(JSON.stringify(selected[0]));\n};","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/containers/ManufacturersContainer.js"],"names":["getItemSession","getAllManufacturers","manufacturers","JSON","parse","getManufacturerById","id","selected","filter","manufacturer","parseInt","idFornecedor","stringify"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,MAAIC,aAAa,GAAGF,cAAc,CAAC,eAAD,CAAlC,CADqC,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOG,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAP;AACH,CAhBM;AAkBP,OAAO,MAAMG,mBAAmB,GAAIC,EAAD,IAAQ;AACvC,MAAIC,QAAQ,GAAGN,mBAAmB,GAAGO,MAAtB,CAA6BC,YAAY,IAAIC,QAAQ,CAACD,YAAY,CAACE,YAAd,CAAR,KAAwCD,QAAQ,CAACJ,EAAD,CAA7F,CAAf;AAEA,SAAOH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACS,SAAL,CAAeL,QAAQ,CAAC,CAAD,CAAvB,CAAX,CAAP;AACH,CAJM","sourcesContent":["// import React from 'react';\r\n// import { fetchManufacturers } from '../services/manufacturers-api';\r\nimport { getItemSession } from '../utils';\r\n\r\nexport const getAllManufacturers = () => {\r\n    let manufacturers = getItemSession('_fornecedores');\r\n\r\n    // if (!manufacturers) {\r\n    //     console.debug('Nova busca de Fornecedores')\r\n    //     fetchManufacturers()\r\n    //         .then(res => {\r\n    //             manufacturers = res.data.Data.Dados;\r\n    //             localStorage.setItem('_fornecedores', JSON.stringify(manufacturers))\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log('Erro ao carregar Fornecedores', error)\r\n    //         })\r\n    // }\r\n\r\n    return JSON.parse(manufacturers);\r\n}\r\n\r\nexport const getManufacturerById = (id) => {\r\n    let selected = getAllManufacturers().filter(manufacturer => parseInt(manufacturer.idFornecedor) === parseInt(id));\r\n   \r\n    return JSON.parse(JSON.stringify(selected[0]));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}