{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.abrao\\\\Desktop\\\\source\\\\clientes-blue-cycle-ecommerce\\\\src\\\\pages\\\\Invoices.js\";\nimport React, { useState, useEffect, createElement, useRef } from 'react'; // default\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchAllInvoices } from '../services/invoices-api';\nimport { formatMoney, disconnect, formatDateToView, formatDateToDatabase, setItemSession } from '../utils';\nimport { Loader } from '../components/Loader/Loader';\nimport { postDuplicateCart, fetchCartItems } from '../services/cart-api';\nimport { trackingIcons } from '../constants/';\nimport * as CartActions from '../store/actions/cart';\nimport { connect } from 'react-redux';\n\nconst Swal = require('sweetalert2');\n\nconst Invoices = ({\n  refreshCartFn\n}) => {\n  const [isLoading, setLoading] = useState(true);\n  const [qtd, setQtd] = useState(0);\n  const [invoices, setInvoices] = useState([]);\n  const [inputs, setInputs] = useState({\n    numeroPedido: ''\n  });\n\n  const fetchLocal = (numeroPedido = null, dataInicial = null, dataFinal = null) => {\n    setLoading(true);\n    fetchAllInvoices(numeroPedido, dataInicial, dataFinal).then(result => {\n      setInvoices(result.data.Data.Dados);\n      setQtd(result.data.Data.QuantidadeRegistrosTotal);\n      setLoading(false);\n    }).catch(reject => {\n      disconnect();\n    });\n  };\n\n  useEffect(() => {\n    fetchLocal();\n  }, []);\n\n  const handleDuplicateInvoice = idPedido => {\n    postDuplicateCart(idPedido).then(resultDup => {\n      if (resultDup.data.Codigo === 200) {\n        fetchCartItems().then(result => {\n          if (result.data.Data.Dados.length > 0) {\n            setItemSession('_carrinho', JSON.stringify(result.data.Data));\n            refreshCartFn(result.data.Data);\n            window.location = '/carrinho';\n          }\n        }).catch(reject => {\n          disconnect();\n        });\n      } else {\n        console.debug('Error');\n      }\n    });\n  };\n\n  const inputDate = useRef(null);\n\n  const onInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let inputValue = inputDate.current.value;\n    let dates = inputValue.split(\" a \");\n    const dataInicial = formatDateToDatabase(dates[0]);\n    const dataFinal = formatDateToDatabase(dates[1]);\n    fetchLocal(inputs.numeroPedido, dataInicial, dataFinal);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"pedidos container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sect-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sect-titulo justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"titulo h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Pedidos\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"titulo h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Total de Pedidos: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"arial-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 69\n    }\n  }, qtd))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"titulo h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Pesquisar\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-pedidos\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form-pedidos--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    htmlFor: \"pedido-numero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"N\\xFAmero do pedido\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Preencha com n\\xFAmero do pedido\",\n    name: \"numeroPedido\",\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form-pedidos--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    htmlFor: \"pedido-periodo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Data do pedido\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pedido-periodo\",\n    className: \"label-daterangepicker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon icon-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"De\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputDate,\n    type: \"text\",\n    className: \"input-daterangepicker\",\n    name: \"daterange\",\n    id: \"pedido-periodo\",\n    readOnly: \"True\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn--lg btn--laranja btn--full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Filtrar\")), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"titulo h2 pedidos-titulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"\\xDAltimos Pedidos\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabela-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, !isLoading ? invoices.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n    className: \"tabela tabela-listrada\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }, \"N. Pedido ERP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, \"N. Pedido WEB\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"160\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, \"Data de Emiss\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, \"Data de Entrega Prevista\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"175\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }, \"A\\xE7\\xE3o\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, invoices.map((invoice, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `icon ${trackingIcons[invoice.CodigoStatusPedido]}`,\n    title: invoice.Status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 45\n    }\n  }, invoice.NumeroPedidoERP ? 'Em processamento' : ''), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, invoice.NumeroPedido), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, formatDateToView(invoice.DataEmissao)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, !invoice.DataEntrega ? 'Em definição' : formatDateToView(invoice.DataEntrega) + '-' + invoice.PeriodoEntrega), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, \"R$ \", formatMoney(invoice.Valor, 2, ',', '.')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }, createElement('a', {\n    href: `/pedido/${invoice.idPedido}`,\n    className: \"c-roxo btn btn--link\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fas fa-eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 145\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"top\",\n    title: \"Repetir Pedido\",\n    className: \"c-roxo btn btn--link\",\n    onClick: () => {\n      if (window.confirm('Deseja repetir esse pedido?')) handleDuplicateInvoice(invoice.idPedido);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 268\n    }\n  }))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-warning\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"Nenhum pedido encontrado\") : /*#__PURE__*/React.createElement(Loader, {\n    short: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sect-footer align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, createElement('a', {\n    href: '/',\n    className: \"btn btn--cinza btn--block btn-full btn--bold\"\n  }, \"Voltar\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  refreshCartFn: data => dispatch(CartActions.refreshCart(data))\n});\n\nexport default connect('', mapDispatchToProps)(Invoices);","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/pages/Invoices.js"],"names":["React","useState","useEffect","createElement","useRef","Header","Footer","fetchAllInvoices","formatMoney","disconnect","formatDateToView","formatDateToDatabase","setItemSession","Loader","postDuplicateCart","fetchCartItems","trackingIcons","CartActions","connect","Swal","require","Invoices","refreshCartFn","isLoading","setLoading","qtd","setQtd","invoices","setInvoices","inputs","setInputs","numeroPedido","fetchLocal","dataInicial","dataFinal","then","result","data","Data","Dados","QuantidadeRegistrosTotal","catch","reject","handleDuplicateInvoice","idPedido","resultDup","Codigo","length","JSON","stringify","window","location","console","debug","inputDate","onInputChange","event","name","value","target","handleSubmit","e","preventDefault","inputValue","current","dates","split","map","invoice","index","CodigoStatusPedido","Status","NumeroPedidoERP","NumeroPedido","DataEmissao","DataEntrega","PeriodoEntrega","Valor","href","className","confirm","mapDispatchToProps","dispatch","refreshCart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createElement, useRef } from 'react';\r\n// default\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { fetchAllInvoices } from '../services/invoices-api';\r\nimport { formatMoney, disconnect, formatDateToView, formatDateToDatabase, setItemSession } from '../utils';\r\nimport { Loader } from '../components/Loader/Loader';\r\nimport { postDuplicateCart, fetchCartItems } from '../services/cart-api';\r\nimport { trackingIcons } from '../constants/'\r\nimport * as CartActions from '../store/actions/cart'\r\nimport { connect } from 'react-redux';\r\nconst Swal = require('sweetalert2');\r\n\r\nconst Invoices = ({ refreshCartFn }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [qtd, setQtd] = useState(0);\r\n    const [invoices, setInvoices] = useState([]);\r\n\r\n    const [inputs, setInputs] = useState({\r\n        numeroPedido: ''\r\n    });\r\n\r\n    const fetchLocal = (numeroPedido = null, dataInicial = null, dataFinal = null) => {\r\n        setLoading(true);\r\n\r\n        fetchAllInvoices(numeroPedido, dataInicial, dataFinal)\r\n            .then(result => {\r\n                setInvoices(result.data.Data.Dados)\r\n                setQtd(result.data.Data.QuantidadeRegistrosTotal)\r\n                setLoading(false)\r\n            })\r\n            .catch(reject => {\r\n                disconnect();\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLocal();\r\n    }, [])\r\n\r\n    const handleDuplicateInvoice = (idPedido) => {\r\n        postDuplicateCart(idPedido)\r\n            .then(resultDup => {\r\n                if (resultDup.data.Codigo === 200) {\r\n                    fetchCartItems()\r\n                        .then(result => {\r\n                            if (result.data.Data.Dados.length > 0) {\r\n                                setItemSession('_carrinho', JSON.stringify(result.data.Data))\r\n                                refreshCartFn(result.data.Data);\r\n                                window.location = '/carrinho';\r\n                            }\r\n                        })\r\n                        .catch(reject => {\r\n                            disconnect();\r\n                        })\r\n                } else {\r\n                    console.debug('Error')\r\n                }\r\n            })\r\n    }\r\n\r\n    const inputDate = useRef(null);\r\n\r\n    const onInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let inputValue = inputDate.current.value;\r\n        let dates = inputValue.split(\" a \");\r\n\r\n        const dataInicial = formatDateToDatabase(dates[0]);\r\n        const dataFinal = formatDateToDatabase(dates[1]);\r\n\r\n        fetchLocal(inputs.numeroPedido, dataInicial, dataFinal);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <section className=\"pedidos container\">\r\n                <div className=\"sect-header\">\r\n                    <div className=\"sect-titulo justify-content-between\">\r\n                        <h2 className=\"titulo h2\">Pedidos</h2>\r\n                        <h6 className=\"titulo h6\">Total de Pedidos: <span className=\"arial-bold\">{qtd}</span></h6>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n\r\n                <h4 className=\"titulo h4\">Pesquisar</h4>\r\n                <form className=\"form-pedidos\" onSubmit={handleSubmit}>\r\n                    <fieldset className=\"form-pedidos--wrapper\">\r\n                        <label className=\"input-label\" htmlFor=\"pedido-numero\">Número do pedido</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            placeholder=\"Preencha com número do pedido\"\r\n                            name=\"numeroPedido\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                    </fieldset>\r\n                    <fieldset className=\"form-pedidos--wrapper\">\r\n                        <label className=\"input-label\" htmlFor=\"pedido-periodo\">Data do pedido</label>\r\n                        <label htmlFor=\"pedido-periodo\" className=\"label-daterangepicker\">\r\n                            <span className=\"icon icon-calendar\"></span>\r\n                            <span>De</span>\r\n                            <input\r\n                                ref={inputDate}\r\n                                type=\"text\"\r\n                                className=\"input-daterangepicker\"\r\n                                name=\"daterange\"\r\n                                id=\"pedido-periodo\"\r\n                                readOnly=\"True\"\r\n                            />\r\n                        </label>\r\n                    </fieldset>\r\n                    <button type=\"submit\" className=\"btn btn--lg btn--laranja btn--full\">Filtrar</button>\r\n                </form>\r\n\r\n                <h2 className=\"titulo h2 pedidos-titulo\">Últimos Pedidos</h2>\r\n                <div className=\"tabela-overflow\">\r\n                    {!isLoading ? (\r\n                        invoices.length > 0 ? (\r\n\r\n                            <table className=\"tabela tabela-listrada\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Status</th>\r\n                                        <th>N. Pedido ERP</th>\r\n                                        <th>N. Pedido WEB</th>\r\n                                        <th width=\"160\">Data de Emissão</th>\r\n                                        <th width=\"200\">Data de Entrega Prevista</th>\r\n                                        <th width=\"175\">Valor</th>\r\n                                        <th>Ação</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {invoices.map((invoice, index) =>\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <span className=\"position-relative\">\r\n                                                    <span className={`icon ${trackingIcons[invoice.CodigoStatusPedido]}`} title={invoice.Status}></span>\r\n                                                    {/* <span className=\"tag--table tag--table-roxo\">!</span> */}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>{invoice.NumeroPedidoERP ? 'Em processamento': ''}</td>\r\n                                            <td>{invoice.NumeroPedido}</td>\r\n                                            <td>{formatDateToView(invoice.DataEmissao)}</td>\r\n                                            <td>\r\n                                                {!invoice.DataEntrega\r\n                                                    ? 'Em definição'\r\n                                                    : formatDateToView(invoice.DataEntrega) + '-' + invoice.PeriodoEntrega}\r\n                                            </td>\r\n                                            <td>R$ {formatMoney(invoice.Valor, 2, ',', '.')}</td>\r\n                                            <td>\r\n                                                {/* <a href=\"/\" className=\"btn btn-link c-roxo\">Ver pedido</a>  */}\r\n                                                {createElement('a', { href: `/pedido/${invoice.idPedido}`, className: \"c-roxo btn btn--link\" }, <span className=\"fas fa-eye\"></span>)}\r\n                                                <button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Repetir Pedido\" className=\"c-roxo btn btn--link\" onClick={() => { if (window.confirm('Deseja repetir esse pedido?')) handleDuplicateInvoice(invoice.idPedido) }}><span className=\"fa fa-refresh\"></span></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                    Nenhum pedido encontrado\r\n                                </div>\r\n                            )\r\n\r\n                    ) : (\r\n                            <Loader short=\"false\" />\r\n                        )}\r\n\r\n                </div>\r\n\r\n                <div className=\"sect-footer align-items-start\">\r\n                    {/* <a href=\"/\" className=\"btn btn--cinza btn--block btn-full btn--bold\">Voltar</a> */}\r\n                    {createElement('a', { href: '/', className: \"btn btn--cinza btn--block btn-full btn--bold\" }, \"Voltar\")}\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    refreshCartFn: (data) => dispatch(CartActions.refreshCart(data))\r\n})\r\n\r\nexport default connect('', mapDispatchToProps)(Invoices);"]},"metadata":{},"sourceType":"module"}