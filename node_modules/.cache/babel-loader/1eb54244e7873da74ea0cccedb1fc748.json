{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.abrao\\\\Desktop\\\\source\\\\clientes-blue-cycle-ecommerce\\\\src\\\\components\\\\SideBar\\\\Manufacturer.js\";\nimport React, { useState, useEffect, createElement } from 'react';\nimport { filtersLimitWord, arrayStringToArrayInt } from '../../utils';\nimport { getAllManufacturers } from '../../containers/ManufacturersContainer';\nimport { Loader } from '../Loader/Loader';\n\nconst Manufacturer = () => {\n  const [manufacturers, setManufacturers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    const allManufacturers = getAllManufacturers();\n    setManufacturers(allManufacturers);\n    setLoading(false);\n  }, []);\n  const url = '/busca';\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const termo = params.get('t') || '';\n  const fornecedores = params.get('f') || '';\n  let arrFornecedores = fornecedores ? arrayStringToArrayInt(fornecedores) : [];\n  const categorias = params.get('c') || '';\n  const subCategorias = params.get('s') || '';\n\n  const handleCheck = e => {\n    e.preventDefault();\n\n    if (!e.target.checked) {\n      arrFornecedores = arrFornecedores.filter(arr => {\n        return arr != e.target.value;\n      });\n    } else {\n      arrFornecedores.push(parseInt(e.target.value));\n    }\n\n    window.location.href = url + '?t=' + termo + '&c=' + categorias + '&s=' + subCategorias + '&f=' + arrFornecedores.toString();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-sticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-sticky_titulos titulofornecedores\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"titulo h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Fornecedores\"), createElement('a', {\n    href: `/`,\n    className: \"limpar-filtro\"\n  }, 'Limpar')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-filtro-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, !isLoading ? manufacturers.map((manufacturer, index) => /*#__PURE__*/React.createElement(\"fieldset\", {\n    key: `manufacturer-field-${index}`,\n    className: index < 10 ? 'form-group' : 'form-group hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: manufacturer.idFornecedor,\n    value: manufacturer.idFornecedor,\n    id: `manufacturer-${manufacturer.idFornecedor}`,\n    className: \"checkbox\",\n    onClick: handleCheck,\n    checked: arrFornecedores.find(v => v === manufacturer.idFornecedor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `manufacturer-${manufacturer.idFornecedor}`,\n    title: manufacturer.Nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, filtersLimitWord(manufacturer.Nome)))) : /*#__PURE__*/React.createElement(Loader, {\n    short: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-link link-texto--laranja btn-verMais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Ver mais\")));\n};\n\nexport default Manufacturer;","map":{"version":3,"sources":["C:/Users/victor.abrao/Desktop/source/clientes-blue-cycle-ecommerce/src/components/SideBar/Manufacturer.js"],"names":["React","useState","useEffect","createElement","filtersLimitWord","arrayStringToArrayInt","getAllManufacturers","Loader","Manufacturer","manufacturers","setManufacturers","isLoading","setLoading","allManufacturers","url","search","window","location","params","URLSearchParams","termo","get","fornecedores","arrFornecedores","categorias","subCategorias","handleCheck","e","preventDefault","target","checked","filter","arr","value","push","parseInt","href","toString","className","map","manufacturer","index","idFornecedor","find","v","Nome"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createElement } from 'react';\r\nimport { filtersLimitWord, arrayStringToArrayInt } from '../../utils';\r\nimport { getAllManufacturers } from '../../containers/ManufacturersContainer';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nconst Manufacturer = () => {\r\n    const [manufacturers, setManufacturers] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const allManufacturers = getAllManufacturers();\r\n        setManufacturers(allManufacturers);\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    const url = '/busca';\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const termo = params.get('t') || '';\r\n    const fornecedores = params.get('f') || '';\r\n    let arrFornecedores = fornecedores ? arrayStringToArrayInt(fornecedores) : [];\r\n    const categorias = params.get('c') || '';\r\n    const subCategorias = params.get('s') || '';\r\n\r\n    const handleCheck = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!e.target.checked) {\r\n            arrFornecedores = arrFornecedores.filter(arr => { return arr != e.target.value })\r\n        } else {\r\n            arrFornecedores.push(parseInt(e.target.value))\r\n        }\r\n\r\n        window.location.href = url\r\n            + '?t=' + termo\r\n            + '&c=' + categorias\r\n            + '&s=' + subCategorias\r\n            + '&f=' + arrFornecedores.toString()\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-sticky\">\r\n            <div className=\"form-sticky_titulos titulofornecedores\">\r\n                <h6 className=\"titulo h6\">Fornecedores</h6>\r\n                {/* {createElement('a', { href: `/busca?t=${termo}&c=${categorias}&s=${subCategorias}`, className: \"limpar-filtro\" }, 'Limpar')} */}\r\n                {createElement('a', { href: `/`, className: \"limpar-filtro\" }, 'Limpar')}\r\n            </div>\r\n            <div className=\"form-filtro-holder\">\r\n                {!isLoading ? (\r\n                    manufacturers.map((manufacturer, index) => (\r\n                        <fieldset key={`manufacturer-field-${index}`} className={index < 10 ? 'form-group' : 'form-group hidden'}>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                name={manufacturer.idFornecedor} \r\n                                value={manufacturer.idFornecedor} \r\n                                id={`manufacturer-${manufacturer.idFornecedor}`} \r\n                                className=\"checkbox\" \r\n                                onClick={handleCheck} \r\n                                checked={arrFornecedores.find(v => v === manufacturer.idFornecedor)} \r\n                            />\r\n                            <label htmlFor={`manufacturer-${manufacturer.idFornecedor}`} title={manufacturer.Nome}>{filtersLimitWord(manufacturer.Nome)}</label>\r\n                        </fieldset>\r\n                    ))\r\n                ) : (\r\n                        <Loader short=\"true\" />\r\n                    )}\r\n            </div>\r\n            <fieldset className=\"form-group\">\r\n                <button className=\"btn btn-link link-texto--laranja btn-verMais\">Ver mais</button>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Manufacturer;"]},"metadata":{},"sourceType":"module"}